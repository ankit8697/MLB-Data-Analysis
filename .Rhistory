qnorm(99)
qnorm(0.995)
pt(-4.99, df = 74)
pt(-2.312, df = 52)
qnorm(0.95)
pnorm(2.01)
pnorm(2.01, lower.tail = FALSE)
pnorm(2, lower.tail = FALSE)
benfordProportions <- log10(1 + 1/(1:9))
invoices <- read.csv("https://www.lock5stat.com/datasets/Benford.csv")
chisq.test(invoices$Invoices, p = benfordProportions)
benfordProportions <- log10(1 + 1/(1:9))
invoices <- read.csv("https://www.lock5stat.com/datasets/Benford.csv")
chisq.test(invoices$Invoices, p = benfordProportions).residuals()
benfordProportions <- log10(1 + 1/(1:9))
invoices <- read.csv("https://www.lock5stat.com/datasets/Benford.csv")
chisq.test(invoices$Invoices, p = benfordProportions)$residuals
knitr::opts_chunk$set(echo = TRUE)
benfordProportions <- log10(1 + 1/(1:9))
invoices <- read.csv("https://www.lock5stat.com/datasets/Benford.csv")
chisq.test(invoices$Invoices, p = benfordProportions)
benfordProportions <- log10(1 + 1/(1:9))
invoices <- read.csv("https://www.lock5stat.com/datasets/Benford.csv")
chisq.test(invoices$Invoices, p = benfordProportions)
chisq.test(invoices$Invoices, p = benfordProportions)$residuals
chisq.test(invoices$Invoices, p = benfordProportions)$residuals
pchisq(3.175, df = 1, lower.tail = FALSE)
pchisq(176.98, df = 4, lower.tail = FALSE)
pchisq(24.805, df = 4, lower.tail = FALSE)
library(readr)
matches <- read_csv("Desktop/Ankit/Carleton/Classes/STAT 120/Final Project/matches.csv")
View(matches)
knitr::opts_chunk$set(echo = TRUE)
facesymmetry <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/facesymmetry.csv")
ls(t.test(facesymmetry$l.pupil))
t.test(facesymmetry$l.pupil)$"conf.int"
t.test(facesymmetry$l.pupil)$"conf.int"
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(relevant_column)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(relevant_column)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(l.pupil ~ r.pupil, data = facesymmetry)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(l.pupil ~ r.pupil, data = facesymmetry, alt = "greater")
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(l.pupil ~ r.pupil, data = facesymmetry, alt = "greater")
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(l.pupil, r.pupil, data = facesymmetry, alt = "greater")
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(l.pupil, r.pupil, data = facesymmetry, alt = "greater")
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(facesymmetry$l.pupil, facesymmetry$r.pupil)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(relevant_column)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(relevant_column)
right <- filter(hand == 1, data = "facesymmetry")
right <- filter(hand == 1, data = facesymmetry)
knitr::opts_chunk$set(echo = TRUE)
facesymmetry <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/facesymmetry.csv")
library(dplyr)
install.packages(c("dplyr", "CarletonStats"))
knitr::opts_chunk$set(echo = TRUE)
facesymmetry <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/facesymmetry.csv")
library(dplyr)
right <- filter(hand == 1, data = facesymmetry)
facesymmetry %>% filter(hand == 1)
right <- facesymmetry %>% filter(hand == 1)
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 0)
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 0)
left
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 0)
right
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 2)
left
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 2)
left_stat <- left$l.pupil - left$r.pupil
right_stat <- right$l.pupil - right$r.pupil
t.test(left_stat, right_stat)
right <- facesymmetry %>% filter(hand == 1)
left <- facesymmetry %>% filter(hand == 2)
left_stat <- left$l.pupil - left$r.pupil
right_stat <- right$l.pupil - right$r.pupil
t.test(left_stat, right_stat)
knitr::opts_chunk$set(echo = TRUE)
facesymmetry <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/facesymmetry.csv")
library(dplyr)
relevant_column <- facesymmetry$l.pupil - facesymmetry$r.pupil
t.test(relevant_column ~ facesymmetry$eye)
t.test(relevant_column ~ facesymmetry$hand)
knitr::opts_chunk$set(echo = TRUE)
pewOrig <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/PewOrig.csv", header=TRUE)
summary(pewOrig)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
pewOrig <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/PewOrig.csv", header=TRUE)
ggplot(data = pewOrig, aes(x = values, fill = income)) + geom_bar()
install.packages("tidyr")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
pewOrig <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/PewOrig.csv", header=TRUE)
cleaned <- drop_na(pewOrig, values, income)
ggplot(data = cleaned, aes(x = values, fill = income)) + geom_bar()
cleaned <- drop_na(pewOrig, values, income)
ggplot(data = cleaned, aes(x = values, fill = income)) + geom_bar()
prop.table(table(cleaned$values, cleaned$income))
chisq.test(cleaned$values, cleaned$income)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
source("http://people.carleton.edu/~apoppick/ClassData/equalSD.lineup.R")
pewOrig <- read.csv("http://www.math.carleton.edu/Stats215/RLabManual/PewOrig.csv", header=TRUE)
birthweight <- read.csv("http://www.math.carleton.edu/Stat120/RLabManual/Birthweight.csv", header=TRUE)
equalSD.lineup(weight ~ status, data = birthweight)
equalSD.lineup(weight ~ status, data = birthweight)
aov(weight ~ status, data = birthweight)
summary(aov(weight ~ status, data = birthweight))
summary(aov(weight ~ status, data = birthweight))
pnorm(-2.383)
pt(9.97, df = 199)
pt(9.97, df = 199, lower.tail = TRUE)
pt(9.97, df = 199, lower.tail = FALSE)
pnorm(0.05)
countTable <- matrix(c(4, 6, 22, 3, 21, 17, 63, 20), nrow = 2, byrow = TRUE)
chisq.test(countTable)
chisq.test(countTable)$expected
chisq.test(countTable)$residuals
pf(2.747, df1 = 116, df2 = 3, lower.tail = FALSE)
pf(2.747, df1 = 116, df2 = 3, lower.tail = TRUE)
pf(2.747, df1 = 116, df2 = 3, lower.tail = FALSE)
pnorm(2.5, lower.tail = FALSE)
pchisq(8.33, df = 2)
pchisq(8.33, df = 2, lower.tail = FALSE)
pchisq(8.33, df = 2)
setwd("~/Desktop/Ankit/Carleton/Classes/STAT 120/Final Project")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(dplyr)
matches <- read.csv("~/Desktop/Ankit/Carleton/Classes/STAT 120/Final Project/matches.csv")
teams <- select(matches, home, away)
all_teams <- data.frame(a=unlist(teams, use.names = FALSE))
names(all_teams)[1] <- "Teams"
scores <- select(matches, home_score, away_score)
all_scores <- data.frame(a=unlist(scores, use.names = FALSE))
names(all_scores)[1] <- "Scores"
all_teams_with_scores <- data.frame(all_teams, all_scores)
total_scores <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, sum)
unique_teams <- unique(all_teams_with_scores$Teams)
unique_teams <- sort(unique_teams)
teams_with_total_scores <- data.frame(unique_teams, total_scores)
teams_with_total_scores <- teams_with_total_scores %>% filter(total_scores > 250)
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
summary(aov(Scores ~ Teams, data = all_teams_with_scores))
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means_2 <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means_2)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means_2 <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
length(unique_teams)
length(score_means_2)
teams_with_mean_score <- data.frame(unique_teams, score_means_2)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means_2 <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
score_means_2
teams_with_mean_score <- data.frame(unique_teams, score_means_2)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means_2 <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
filtered_by_occurance$Teams
teams_with_mean_score <- data.frame(unique_teams, score_means_2)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
score_means
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, mean)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
score_means
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
levels(score_means)
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
levels(score_means)
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
score_means
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
as.numeric(score_means)
score_means
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
names(score_means)
teams_with_mean_score <- data.frame(unique_teams, score_means)
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means_2)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
teams_with_mean_attendance <- data.frame(unique_teams, mean_attendance)
summary(aov(Scores ~ Teams, data = filtered_by_occurance))
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
wanted_teams <- droplevels(pull(teams_with_mean_attendance, required_names))
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
wanted_teams <- droplevels(pull(teams_with_mean_attendance, unique_teams))
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
required_names
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
wanted_teams <- droplevels(pull(teams_with_mean_attendance, unique_teams))
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
filtered_teams_with_attendance <- filter(teams_with_attendance, Teams %in% teams_with_mean_attendance$required_names)
ggplot(filtered_teams_with_attendance, aes(x=Teams, y=attendance)) + geom_boxplot() + coord_flip()
summary(aov(attendance ~ Teams, data = filtered_teams_with_attendance))
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
filtered_teams_with_attendance <- filter(teams_with_attendance, Teams %in% teams_with_mean_attendance$required_names)
ggplot(filtered_teams_with_attendance, aes(x=Teams, y=attendance)) + geom_boxplot() + coord_flip()
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
filtered_teams_with_attendance <- filter(teams_with_attendance, Teams %in% teams_with_mean_attendance$required_names)
ggplot(filtered_teams_with_attendance, aes(x=Teams, y=attendance)) + geom_boxplot() + coord_flip()
teams <- select(matches, home, away)
all_teams <- data.frame(a=unlist(teams, use.names = FALSE))
names(all_teams)[1] <- "Teams"
scores <- select(matches, home_score, away_score)
all_scores <- data.frame(a=unlist(scores, use.names = FALSE))
names(all_scores)[1] <- "Scores"
all_teams_with_scores <- data.frame(all_teams, all_scores)
total_scores <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, sum)
unique_teams <- unique(all_teams_with_scores$Teams)
unique_teams <- sort(unique_teams)
teams_with_total_scores <- data.frame(unique_teams, total_scores)
teams_with_total_scores <- teams_with_total_scores %>% filter(total_scores > 250)
score_means <- tapply(all_teams_with_scores$Scores, all_teams_with_scores$Teams, mean)
teams_with_mean_score <- data.frame(unique_teams, score_means)
teams_with_mean_score_filtered <- teams_with_mean_score %>% filter(score_means > 1.5)
ggplot(teams_with_mean_score_filtered, aes(y = unique_teams, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score Per Team", y="Teams", x = "Average Scores")
filtered_by_occurance <- all_teams_with_scores %>%
group_by(Teams) %>%
filter(n()>200)
score_means <- tapply(filtered_by_occurance$Scores, filtered_by_occurance$Teams, mean)
relavent_names <- names(score_means)
teams_with_mean_score <- data.frame(relavent_names, score_means)
teams_with_mean_score_filtered <- drop_na(teams_with_mean_score)
ggplot(teams_with_mean_score_filtered, aes(y = relavent_names, x = score_means)) + geom_bar(stat = "identity") + labs(title= "Average Score for Teams that Played Over 200 Games", y="Teams", x = "Average Score")
attendances <- select(matches, attendance)
attendances <- rbind(attendances, attendances)
teams_with_attendance <- data.frame(all_teams, attendances)
teams_with_attendance$attendance <- as.numeric(gsub(",", "", teams_with_attendance$attendance))
teams_with_attendance <- drop_na(teams_with_attendance)
mean_attendance <- tapply(teams_with_attendance$attendance, teams_with_attendance$Teams, mean)
required_names <- names(mean_attendance)
teams_with_mean_attendance <- data.frame(required_names, mean_attendance)
teams_with_mean_attendance <- teams_with_mean_attendance %>% filter(mean_attendance > 20000)
filtered_teams_with_attendance <- filter(teams_with_attendance, Teams %in% teams_with_mean_attendance$required_names)
ggplot(filtered_teams_with_attendance, aes(x=Teams, y=attendance)) + geom_boxplot() + coord_flip()
